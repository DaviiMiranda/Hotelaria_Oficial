{
  "version": 3,
  "sources": ["src/app/services/room-service.ts"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nexport interface Room {\n  id: string;\n  number: string;\n  type: string;\n  price: number;\n  available: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoomService {\n\n  private apiUrl = 'http://localhost:8080/api/rooms';\n\n  constructor(private http: HttpClient) { }\n  \n  getRooms(): Observable<Room[]> {\n    return this.http.get<Room[]>(this.apiUrl);\n  }\n\n  getRoomById(id: string): Observable<Room> {\n    return this.http.get<Room>(`${this.apiUrl}/${id}`);\n  }\n\n  addRoom(room: Room): Observable<Room> {\n    return this.http.post<Room>(this.apiUrl, room);\n  }\n\n  updateRoom(id: string, available: boolean): Observable<Room> {\n    return this.http.put<Room>(`${this.apiUrl}/${id}`, { available });\n  }\n\n  deleteRoom(id: string): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n  \n}\n"],
  "mappings": ";;;;;;;;;;;;;;;IAea;;;;;AAfb;AACA;AAcO,IAAM,cAAN,MAAMA,aAAW;MAIF;MAFZ,SAAS;MAEjB,YAAoB,MAAgB;AAAhB,aAAA,OAAA;MAAoB;MAExC,WAAQ;AACN,eAAO,KAAK,KAAK,IAAY,KAAK,MAAM;MAC1C;MAEA,YAAY,IAAU;AACpB,eAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;MACnD;MAEA,QAAQ,MAAU;AAChB,eAAO,KAAK,KAAK,KAAW,KAAK,QAAQ,IAAI;MAC/C;MAEA,WAAW,IAAY,WAAkB;AACvC,eAAO,KAAK,KAAK,IAAU,GAAG,KAAK,MAAM,IAAI,EAAE,IAAI,EAAE,UAAS,CAAE;MAClE;MAEA,WAAW,IAAU;AACnB,eAAO,KAAK,KAAK,OAAa,GAAG,KAAK,MAAM,IAAI,EAAE,EAAE;MACtD;;;;;AAxBW,kBAAW,WAAA;MAHvB,WAAW;QACV,YAAY;OACb;OACY,WAAW;;;",
  "names": ["RoomService"]
}
